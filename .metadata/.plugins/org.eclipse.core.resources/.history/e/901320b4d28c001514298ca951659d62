package co.com.hobbies.servicios;

import java.util.List;

import javax.ws.rs.core.MediaType;

import co.com.hobbies.model.SesionDTO;
import co.com.hobbies.services.HobbiesFacade;

import com.google.gson.Gson;
import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.ClientResponse;
import com.sun.jersey.api.client.WebResource;
import com.sun.jersey.api.client.config.ClientConfig;
import com.sun.jersey.api.client.config.DefaultClientConfig;
import com.sun.jersey.api.json.JSONConfiguration;


/**
 * Recuperar la informacion de los objetos sesion que se muestran en la pantalla
 * 
 * @author Milton
 */
public class SesionServicesImplLocal implements SesionServicesInterface {

  public List<SesionDTO> getSesiones() {
    HobbiesFacade hobbiesFacade = new HobbiesFacade();
    List<SesionDTO> sesionDTOList = hobbiesFacade.getFirstSesionDTOFromIndex();
    return sesionDTOList;
  }

  public static void main(String args[]) {
//    getMethod();
    
    postMethod();
  }

  private static void getMethod() {
    try {
      Client client = Client.create();
      WebResource webResource = client.resource("http://localhost:8080/mvc_ws/rest/json/hobbies/sesion");
      ClientResponse response = webResource.accept("application/json").get(ClientResponse.class);

      if (response.getStatus() != 200) {
        throw new RuntimeException("Failed : HTTP error code : " + response.getStatus());
      }

      String output = response.getEntity(String.class);
      System.out.println("Output from Server .... \n");
      System.out.println(output);
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
  
  private static void postMethod() {
    try {
      SesionDTO sesionDTO = new SesionDTO("Entretenimiento", "resources");
      
//      ClientConfig clientConfig = new DefaultClientConfig();
//      clientConfig.getFeatures().put(JSONConfiguration.FEATURE_POJO_MAPPING, Boolean.TRUE);
//      Client client = Client.create(clientConfig);
//      WebResource webResource = client.resource("http://localhost:8080/mvc_ws/rest/json/hobbies/post");
//      ClientResponse response = webResource.accept("application/json").type("application/json").post(ClientResponse.class, sesionDTO);
//      if (response.getStatus() != 201) {
//        throw new RuntimeException("Failed : HTTP error code : " + response.getStatus());
//      }
//      String output = response.getEntity(String.class);
//      System.out.println("Server response .... \n");
//      System.out.println(output);
      
      
      Client client = Client.create();
      WebResource webResource = client.resource("http://localhost:8080/mvc_ws/rest/json/hobbies/post");
      
      

      // Parse de DTO a JSON
      Gson gson = new Gson();
      String json = gson.toJson(sesionDTO);      
      
//      String input = "{\"titulo\":\"Entretenimiento\",\"imagen\":\"resources\\img\\portfolio\\entretenimiento.jpg\"}";
      String input = "{\"titulo\":\"Entretenimiento\",\"imagen\":\"resources\img\"}";
      
      ClientResponse response = webResource.type("application/json").post(ClientResponse.class, input);
//      ClientResponse response = webResource.type(MediaType.APPLICATION_JSON).post(ClientResponse.class, input);

      if (response.getStatus() != 201) {
        throw new RuntimeException("Failed : HTTP error code : " + response.getStatus());
      }

      String output = response.getEntity(String.class);
      System.out.println("Output from Server .... \n");
      System.out.println(output);
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
}
